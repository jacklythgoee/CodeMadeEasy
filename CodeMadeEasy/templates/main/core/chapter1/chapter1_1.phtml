<?php require_once __DIR__ . '/../../../base.phtml'; ?>
<?php require_once __DIR__ . '/../coreNavLesson.phtml'; ?>

<body>

    <section class="lesson-content"> <!-- Lesson Content Start -->
        <div class="lesson-container"> <!-- Lesson Container Start -->
            <div class="content">  <!-- Content Start -->
                <h1>Chapter 1.1 - Functions, Statements, and Syntax Errors</h1>
                <hr>
                <div class="part-content">
                    <h2>Welcome!</h2>
                    <p></p>
                        Welcome to CodeMadeEasy Basic Programming Tutorials! Above all else, these tutorials aim to make programming
                        easy unlike many other sites and books. These tutorials assume that you have no prior knowledge of programming.
                         We will teach you everything you need to know as you progress, with lots of examples on the way!<br><br>

                         From here we will go over several of the basic concepts that are essential to every programmer. The goal 
                         of this course is to help you understand basic programming concepts and how to build a program. By the 
                         end of the Course you will be able to write simple programs.
                    </p>
                </div>
                
                <div class="part-content">
                    <h2>Statements</h2>
                    <p>
                        A computer program is a sequence of instructions that tell the computer what to do. A <b>statement</b> is a type
                        of instruction that causes the program to perform an action.<br>

                        Statements are by far the most common type of instruction in all languages. In that regard, they are the smallest independent 
                        unit of computation in programming languages, they act much like sentences do in natural language. When we want to 
                        convey an idea to another person, we will speak to them or write in sentences and not just randomized words. When 
                        programming, when we want to do something, we will typically write statements.<br>

                        Depending on the language you are developing in, programmers will use semi colons (in C++) at the end of a statement to let the 
                        computer know that this statement is finished.
                    </p>
                    <p>
                        There are many kinds of statements in this language:
                        <ul>
                            <li>Declaration statements</li>
                            <li>Jump statements.</li>
                            <li>Expression statements</li>
                            <li>Compound statements</li>
                            <li>Selection statements (conditionals)</li>
                            <li>Iteration statements (loops)</li>
                            <li>Try blocks</li>
                        </ul>
                    </p>
                </div>

                <div class="part-content">
                    <h2>Functions and the Main Function</h2>
                    <p>
                    Programmers will use a concept called functions when writing code. A function is a collection of statements that executes sequentially from top to bottom.
                    </p>
                        <div class="lesson-rule">
                            <p>
                                <mark>Rule</mark> - Every C++ programmust have a special function named <b>main</b>. When the program is run, the statements 
                                inside of main are executed in order.
                            </p>
                        </div>
                        
                    <p>
                        Functions are written to do a specific job that you want them to do. For example, the function “max” will find the max integer out of 
                        all the numbers inputted.<br><br>


                        Now that we have a brief understanding on what statements and functions are we can start coding and learning what each line does in detail. 
                        Below is an example that outputs “Hello World!” to the console:
                    </p>
                    <pre>
                        <code class="language-cpp line-numbers">
                            #include &#x3C;iostream&#x3E;
                            
                            int main()
                            {
                                std:cout << "Hello World!";
                                return 0;
                            }
                        </code>
                    </pre>
                    <p>
                        <b>Line 1: </b>this Is a special type of line called a preprocessor directive. This preprocessor directive indicates that we would like 
                        to use the contents of iostream library. This allows us to read and write text to/from the console.<br><br>

                        <b>Line 2: </b>This line is blank; this is ignored by the compiler. This only exists to make it easier for humans to read. <br><br>

                        <b>Line 3: </b>tells the compiler that we are going to write (define) a function called main. Every C++ program must have this main 
                        function, or it will fail to link.<br><br>

                        <b>Line 4 & 7:</b> tells the compiler which lines are part of the main function. Everything from the start to the end of the curly braces 
                        is called a function body.<br><br>

                        <b>Line 5:</b> This is the first statement that will execute when you run the program. std::cout stands for ‘character output’ and the 
                        << operator allows us to send letters and numbers to the console to be outputted.<br><br>

                        <b>Line 6: </b>This is a return statement. When an executable program finishes running, the program sends a value back to the operating system in order to
                        indicate whether it ran successfully or not. This statement returns ‘0’, meaning “everything went okay”. This is the last statement that is executed.
                    </p>
                </div>

                <div class="part-content">
                    <h2>Syntax and Syntax Errors</h2>
                    <p>
                        in English, sentences are constructed according to specific grammatical rules that you probably learned in English class in school, 
                        normal sentences end in a period. The rules that govern how sentences are constructed in a language is called syntax.<br><br>

                        Programming Languages have syntax too: rules about how your program must be constructed in order to be considered a valid program. 
                        When you compile your program, the compiler is responsible for making sure your program follows the basic syntax of the language. 
                        If you violate a rule, the compiler will complain when you try to compile your program, and issue you a syntax error. For example:
                    </p>
                    
                    <div class="split-content">
                        <pre class="content-half">
                            <code class="language-cpp line-numbers">
                                #include &#x3C;iostream&#x3E;
                                
                                int main()
                                {
                                    std:cout << "Hello World!";
                                    return 0;
                                }
                            </code>
                        </pre>
                        <img src="../../img/core/Chapter1/picture1.png" class="chap-1_1-picture1">
                    </div> 
                    <p>
                        This code is missing a semicolon at the end of line 5. If I were to compile this I would get an error. Visual studio 
                        prompts you with some text, displaying that “there were build errors. Would you like to continue and run the latest 
                        successful build?” If this ever pops up or something similar you should typically select “no” and find the problem.
                    </p>
                    <p>
                        Compilers will usually pinpoint what line the error is on and what the error is. In this example, you can see a description 
                        of the error, what file it is on, and what line the error is.
                    </p>
                    <div class="split-content">
                        <img src="../../img/core/Chapter1/picture2.png" class="chap-1_1-picture2">
                        <img src="../../img/core/Chapter1/picture3.png" class="chap-1_1-picture3">
                    </div>
                    <P>
                        This is telling you that you have a syntax error on line 6: the compiler was expecting a semicolon before the return statement. Although the compiler 
                        will tell you which line of code it was compiling when it encountered the syntax error, the omission may be on previous line. In this case, 
                        the error is at the end of line 5. 
                    </P>
                </div>

                <div class="part-content quiz">
                    <h2>Chapter 1.1 End of Topic Quiz</h2>
                    <p>
                        The following quiz is meant to reinforce your understanding of the material presented above.
                    </p>
<!-- --------------------------------------------------Question 1 Start --------------------------------------------------------------------------------- -->
                    <h3 class="quiz-question">1. What is a statement? </h3>
                    <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                    <p id="answer">
                        A <b>statement</b> is an instruction in a computer program that tells the computer to perform an action.
                    </p>
                    <br><br><hr>

<!-- ------------------------------------------------Question 2 Start --------------------------------------------------------------------------------- -->
                    <h3 class="quiz-question">2. What is a function? </h3>
                    <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                    <p id="answer">
                        A <b>function</b> is several statements that are executed sequentially.
                    </p>
                    <br><br><hr>
<!-- ----------------------------------------------- Question 4 Start --------------------------------------------------------------------------------- -->
                    <h3 class="quiz-question">4. What symbols are statements in C++ often ended with?</h3>
                    <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                    <p id="answer">
                        Statements are ended with semicolons ( ; )
                    </p>
                    <br><br><hr>
<!-- ----------------------------------------------- Question 5 Start --------------------------------------------------------------------------------- -->
                    <h3 class="quiz-question">5. What is a syntax error?</h3>
                    <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                    <p id="answer">
                        A syntax error is a compiler error, that occurs when you violate the grammar rules in the  C++ language.
                    </p>
                    <br><br><hr>                            
                </div>

                <div class="prev-next">
                    <div class="prev-next-inline">
                        <a class="nav-link" href="1_2.php">
                            <div class="nav-button nav-button-next">
                                <div class="nav-button-icon">
                                    <i class="fas fa-chevron-circle-right" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Next Lesson</div>
                                    <div class="nav-button-lesson">
                                        <span class="nav-button-lesson-number">1.2</span>
                                        Comments
                                    </div>
                                </div>
                            </div>
                        </a>
                        <a class="nav-link" href="../coreChapter.php">
                            <div class="nav-button nav-button-index">
                                <div class="nav-button-icon">
                                    <i class="fas fa-home" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Back to Table of Contents</div>
                                </div>
                            </div>
                        </a>
                        <a class="nav-link" href="#">
                            <div class="nav-button nav-button-prev">
                                <div class="nav-button-icon">
                                    <i class="fas fa-chevron-circle-left" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Previous Lesson</div>
                                    <div class="nav-button-lesson">
                                        <span class="nav-button-lesson-number">*</span>
                                        No Previous Lesson
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>

            </div> <!-- Content End -->
        </div> <!-- Lesson Container End -->
    </section> <!-- Lesson Content End -->

<script src="/../js/quiz.js"></script>

</body>

<?php require_once __DIR__ . '/../../footer.phtml'; ?>
