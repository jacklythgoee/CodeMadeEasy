<?php require_once __DIR__ . '/../../../base.phtml'; ?>
<?php require_once __DIR__ . '/../coreNavLesson.phtml'; ?>

<body>

    <section class="lesson-content"> <!-- Lesson Content Start -->
        <div class="lesson-container"> <!-- Lesson Container Start -->
            <div class="content"> <!-- Content Start -->
                <h1>Chapter 1.10 - Expressions</h1>
                <hr>
                <div class="part-content">
                    <p>
                        An expression is a combination of literals, variables, operators, and explicit function calls that produce a single 
                        output value. When an expression Is executed, each of the terms in the expression is evaluated until a single value 
                        remains (this process is called evaluation). That single value is the result of the expression.
                    </p>
                    <p>
                        All languages will involve some mathematics. Some of the most basic mathematic terms are. Addition(+), Subtraction (-), Division (/), and Multiplication (*).
                    </p>
                    <p>
                        Here are some examples of different kinds of expressions, with comments indicating how they evaluate:
                    </p>
                        <pre>
                            <code class="language-cpp line-numbers">
                                2                                //2 is a literal that evaluates to value 2
                                "Hello World!"          //"Hello World!" is a literal that evaluates to text "Hello World!"
                                X                               //X is a variable that evaluates to the value of X
                                2+3                          //2 + 3 uses operator + to evaluate to value 5
                                x = 2 + 3                 //2 + 3 evaluates to value 5, which is then assigned to variable X
                                std::cout << X       //X evaluates to the value of x, which is then printed to the console
                            </code>
                        </pre>
                    <p>
                        As you can see, literals evaluate to their own values. Variables evaluate to the value of the variable. 
                        We have not covered function calls yet, but in the context of expression, function calls evaluate whatever value the function returns. 
                        And operators let us combine multiple values to produce a new value.
                    </p>
                    <div class="lesson-practice">
                        <mark>Key Insight</mark> - wherever you can use a single value in C++, you can use an expression  
                        instead, and the compiler will resolve the expression down to a single value.
                    </div>
                </div>

                <div class="part-content">
                    <h2>Expression Statements</h2>
                    <p>
                        An expression statement is a statement that consists of an expression followed by a semicolon. 
                        When the statement is executed, the expression will be evaluated, and the result of the expression will be discarded.
                    </p>
                    <div class="lesson-rule">
                        <mark>Rule</mark> - Values calculated in expressions are discard at the end of the expression
                    </div>
                </div>

                <div class="part-content quiz">
                    <h2>Chapter 1.10 End of Topic Quiz</h2>
                    <p>
                        The following quiz is meant to reinforce your understanding of the material presented above.
                    </p>
<!-- --------------------------------------------------Question 1 Start --------------------------------------------------------------------------------- -->
                        <h3 class="quiz-question">1. What is the difference between a statement and an expression?</h3>
                        <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                        <p id="answer">
                            <b>Statements</b> are used when we want the program to perform an action. Expressions are used when 
                            we want the program to calculate a value.
                        </p>
                        <br><br><hr>

<!-- ------------------------------------------------Question 2 Start --------------------------------------------------------------------------------- -->
                        <h3 class="quiz-question">2. Indicate whether each of the following lines are statements that do not contain expressions, 
                            statements that contain expressions, or are expression statements.</h3>
<!------------------------------------------------------- A ---------------------------------------------------------------------------------------------->
                        <h3>A - </h3>
                        <pre>
                            <code class="language-cpp line-numbers">
                                int x;
                            </code>
                        </pre>
                        <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                        <p id="answer">
                            Statement does not contain an expression (this is just a variable definition)
                        </p>
<!------------------------------------------------------- B---------------------------------------------------------------------------------------------->
                        <h3>B - </h3>
                        <pre>
                            <code class="language-cpp line-numbers">
                                int x = 5;
                            </code>
                        </pre>
                        <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                        <p id="answer">
                            Statement contains an expression (The right hand side of the equals side is an expression containing a single value, 
                            but the rest of the statement isnâ€™t an expression)
                        </p>
<!------------------------------------------------------- B---------------------------------------------------------------------------------------------->
                        <h3>C - </h3>
                        <pre>
                            <code class="language-cpp line-numbers">
                                x = 5;
                            </code>
                        </pre>
                        <button onclick="show_hide(this)" class="quiz-button">Show Solution</button>
                        <p id="answer">
                            Expression statement (the entire statement is an expression, terminated by a semicolon)
                        </p>
                </div>
                
                <div class="prev-next">
                    <div class="prev-next-inline">
                        <a class="nav-link" href="1_11.php">
                            <div class="nav-button nav-button-next">
                                <div class="nav-button-icon">
                                    <i class="fas fa-chevron-circle-right" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Next Lesson</div>
                                    <div class="nav-button-lesson">
                                        <span class="nav-button-lesson-number">1.11</span>
                                        For Loops
                                    </div>
                                </div>
                            </div>
                        </a>
                        <a class="nav-link" href="../coreChapter.php">
                            <div class="nav-button nav-button-index">
                                <div class="nav-button-icon">
                                    <i class="fas fa-home" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Back to Table of Contents</div>
                                </div>
                            </div>
                        </a>
                        <a class="nav-link" href="1_9.php">
                            <div class="nav-button nav-button-prev">
                                <div class="nav-button-icon">
                                    <i class="fas fa-chevron-circle-left" aria-hidden="true"></i>
                                </div>
                                <div class="nav-button-text">
                                    <div class="nav-button-title">Previous Lesson</div>
                                    <div class="nav-button-lesson">
                                        <span class="nav-button-lesson-number">1.9</span>
                                        Introduction to Literals and Operators
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
                
            </div> <!-- Content End -->
        </div> <!-- Lesson Container End -->
    </section> <!-- Lesson Content End -->
    
<script src="/../js/quiz.js"></script>

</body>

<?php require_once __DIR__ . '/../../footer.phtml'; ?>
